************************************************************************
*
*     Subroutine QNORM01                           Called by: PPCCTEST
*
*     Returns the standard normal quantile for a given probability
*
*     Wichura, M.J. (1988).
*     Algorithm AS 241: The Percentage Points of the Normal Distribution.
*     Applied Statistics, 37, 477-484.
*
************************************************************************
      DOUBLE PRECISION FUNCTION QNORM01(P)
      DOUBLE PRECISION P
C
C     LOCAL VARS
C
      DOUBLE PRECISION Q,R
*
*     CHECK BOUNDS, RETURN 0 IF OUT
*
      QNORM01 = 0.D0
      IF(P .GE. 1.D0 .OR. P .LE. 0.D0) RETURN
      Q = P - 0.5D+00
*     
*     IF P IS > .075 AND < .925
*     
      IF (ABS(Q) <= .425D0) THEN
         R = .180625D0 - Q**2
         QNORM01 = Q * (((((((R * 2509.0809287301226727D0 +
     $        33430.575583588128105D0) * R + 
     $        67265.770927008700853D0) * R +
     $        45921.953931549871457D0) * R + 
     $        13731.693765509461125D0) * R +
     $        1971.5909503065514427D0) * R + 
     $        133.14166789178437745D0) * R +
     $        3.387132872796366608D0) /
     $        (((((((R * 5226.495278852854561D0 +
     $        28729.085735721942674D0) * R + 
     $        39307.89580009271061D0) * R +
     $        21213.794301586595867D0) * R + 
     $        5394.1960214247511077D0) * R +
     $        687.1870074920579083D0) * R + 
     $        42.313330701600911252D0) * R + 1.D0)
         RETURN
      ELSE 
         IF (Q .LT. 0D0) THEN
	    R = P
         ELSE
	    R = 1D0 - P
         ENDIF
         R = SQRT(-LOG(R))
         IF (R .LE. 5D0) THEN
            R = R - 1.6D0
	    QNORM01 = (((((((R * 7.7454501427834140764D-4 +
     $           .0227238449892691845833D0) * R + 
     $           0.24178072517745061177D0) * R +
     $           1.27045825245236838258D0) * R + 
     $           3.64784832476320460504D0) * R +
     $           5.7694972214606914055D0) *  R + 
     $           4.6303378461565452959D0) * R +
     $           1.42343711074968357734D0) /
     $           (((((((R * 1.05075007164441684324D-9 + 
     $           5.475938084995344946D-4) * R + 
     $           0.0151986665636164571966D0) * R +
     $           0.14810397642748007459D0) * R + 
     $           0.68976733498510000455D0) * R +
     $           1.6763848301838038494D0) * R + 
     $           2.05319162663775882187D0) * R + 1.D0)
         ELSE
            R = R - 5D0;
	    QNORM01 = (((((((R * 2.01033439929228813265D-7 +
     $          2.71155556874348757815D-5) * R + 
     $           0.12426609473880784386D-2) * R +
     $           0.026532189526576123093D0) * R + 
     $           0.29656057182850489123D0) * R +
     $           1.7848265399172913358D0) * R + 
     $           5.4637849111641143699D0) * R + 
     $           6.6579046435011037772) /
     $           (((((((R * 2.04426310338993978564D-15 + 
     $           1.4215117583164458887D-7) * R + 
     $           1.8463183175100546818D-5) * R +
     $           7.868691311456132591D-4) * R + 
     $           0.0148753612908506148525D0) * R + 
     $           .13692988092273580531D0) * R + 
     $           0.59983220655588793769) * R + 1.D0)
         ENDIF
      ENDIF
      IF(Q .LT. 0.0D0) QNORM01 = -QNORM01
      RETURN
      END
